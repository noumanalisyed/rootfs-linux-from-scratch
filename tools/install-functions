#!/bin/bash

function update_references {
  echo_color "update_references dir:$1 files:$2 output_dir:$3"
  find $1 -name "$2" | xargs --no-run-if-empty \
    /bin/sed -i \
      -e "s:$3:@OUTPUT_DIR@:g" \
      -e "s:$staging_directory:@OUTPUT_DIR@:g" \
      -e "s:$output_directory:@BASE_DIR@:g" \
      -e "s:\([\"'= ]\)/usr:\\1@OUTPUT_DIR@/usr:g" \
      -e "s:\([\"'= ]\)$staging_directory/usr:\\1@OUTPUT_DIR@/usr:g" \
      -e "s|-I/usr/|-I@OUTPUT_DIR@/usr/|g" \
      -e "s|-L/usr/|-L@OUTPUT_DIR@/usr/|g" \
      -e "s:@OUTPUT_DIR@:$3:g" \
      -e "s:@BASE_DIR@:$output_directory:g"
}

function patch_libtool {
  echo_color yellow "Patching libtool for $package-$version"

  for i in `find $root_directory/build/$package-$version -name ltmain.sh`; do
    ltmain_version=`sed -n '/^[ \t]*VERSION=/{s/^[ \t]*VERSION=//;p;q;}' $i | sed -e 's/\([0-9]*\.[0-9]*\).*/\1/' -e 's/\"//'`; 
    ltmain_patchlevel=`sed -n '/^[ \t]*VERSION=/{s/^[ \t]*VERSION=//;p;q;}' $i | sed -e 's/\([0-9]*\.[0-9]*\.*\)\([0-9]*\).*/\2/' -e 's/\"//'`; 
    if test ${ltmain_version} = '1.5'; then
    echo_color yellow "Patching ${i} for version ${ltmain_version}.${ltmain_patchlevel}"
      patch -i $root_directory/tools/libtool/libtool-v1.5.patch ${i};
    elif test ${ltmain_version} = "2.2"; then
    echo_color yellow "Patching ${i} for version ${ltmain_version}.${ltmain_patchlevel}"
      patch -i $root_directory/tools/libtool/libtool-v2.2.patch ${i};
    elif test ${ltmain_version} = "2.4"; then 
      if test ${ltmain_patchlevel:-0} -gt 2; then 
        echo_color yellow "Patching ${i} for version ${ltmain_version}.${ltmain_patchlevel}"
        patch -i $root_directory/tools/libtool/libtool-v2.4.4.patch ${i}; 
      else
        echo_color yellow "Patching ${i} for version ${ltmain_version}.${ltmain_patchlevel}"
        patch -i $root_directory/tools/libtool/libtool-v2.4.patch ${i};
      fi
    fi
  done
}